import xlwt
# 35 Descriptors
import sys
#reload(sys)
#sys.setdefaultencoding('utf-8')
#print(sys.getdefaultencoding())

def GenExcelMHDist(metal, metalGroup):
    workbook = xlwt.Workbook(encoding='ascii')
    worksheet = workbook.add_sheet('Data')
    worksheet.write(0, 0, "ID")
    worksheet.write(0, 1, "Metal")
    worksheet.write(0, 2, "Group")
    worksheet.write(0, 3, "BRH-G")
    worksheet.write(0, 4, "M-HDist")
    worksheet.write(0, 5, "CoordNum")
    worksheet.write(0, 6, "EN-M")
    worksheet.write(0, 7, "EN-H")
    worksheet.write(0, 8, "EN-B")
    worksheet.write(0, 9, "EN-C")
    worksheet.write(0, 10, "EN-N")
    worksheet.write(0, 11, "EN-O")
    worksheet.write(0, 12, "EN-F")
    worksheet.write(0, 13, "EN-Si")
    worksheet.write(0, 14, "EN-P")
    worksheet.write(0, 15, "EN-S")
    worksheet.write(0, 16, "EN-Cl")
    worksheet.write(0, 17, "EA-M")
    worksheet.write(0, 18, "EA-H")
    worksheet.write(0, 19, "EA-B")
    worksheet.write(0, 20, "EA-C")
    worksheet.write(0, 21, "EA-N")
    worksheet.write(0, 22, "EA-O")
    worksheet.write(0, 23, "EA-F")
    worksheet.write(0, 24, "EA-Si")
    worksheet.write(0, 25, "EA-P")
    worksheet.write(0, 26, "EA-S")
    worksheet.write(0, 27, "EA-Cl")
    worksheet.write(0, 28, "H")
    worksheet.write(0, 29, "B")
    worksheet.write(0, 30, "C")
    worksheet.write(0, 31, "N")
    worksheet.write(0, 32, "O")
    worksheet.write(0, 33, "F")
    worksheet.write(0, 34, "Si")
    worksheet.write(0, 35, "P")
    worksheet.write(0, 36, "S")
    worksheet.write(0, 37, "Cl")
    worksheet.write(0, 38, "Charge")
    worksheet.write(0, 39, "LTrans")
    worksheet.write(0, 40, "GrpNum")
    #worksheet.write(0, 37, "Names")

    fpID=open("ID","r")
    line=fpID.read()
    worksheet.write(1, 0, str(line.strip('\n')))
    fpID.close()

    #fpMetal=open("Metal","r")
    #line=fpMetal.read()
    worksheet.write(1, 1, metal)
    #fpMetal.close()

    fpGroup=open("Group.log","r")
    line=fpGroup.read()
    worksheet.write(1, 2, str(line.strip('\n').split(":")[1]))
    fpGroup.close()

    #fpBDE=open("BRHFreeEnergy","r")
    #line=fpBDE.read()
    worksheet.write(1, 3, 0)
    #fpBDE.close()
    fpMH=open("M-H_BondLength.log","r")
    line=fpMH.read()
    worksheet.write(1, 4, float(line.strip('\n').split(":")[1]))
    fpMH.close()

    fpCN=open("CoordinationNumber.log","r")
    line=fpCN.read()
    worksheet.write(1, 5, int(line.strip('\n').split(":")[1]))   
    fpCN.close()

    fpEN=open("ElectroNegativity.log","r")
    line=fpEN.read()
    string=line.strip('\n').split(":")[2]
    worksheet.write(1, 6, float(string.split()[0]))   
    worksheet.write(1, 7, float(string.split()[1]))   
    worksheet.write(1, 8, float(string.split()[2]))   
    worksheet.write(1, 9, float(string.split()[3]))   
    worksheet.write(1, 10, float(string.split()[4]))   
    worksheet.write(1, 11, float(string.split()[5]))   
    worksheet.write(1, 12, float(string.split()[6]))   
    worksheet.write(1, 13, float(string.split()[7]))   
    worksheet.write(1, 14, float(string.split()[8]))   
    worksheet.write(1, 15, float(string.split()[9]))   
    worksheet.write(1, 16, float(string.split()[10]))   
    fpEN.close()

    fpEA=open("ElectronAffinity.log","r")
    line=fpEA.read()
    string=line.strip('\n').split(":")[2]
    worksheet.write(1, 17, float(string.split()[0]))
    worksheet.write(1, 18, float(string.split()[1]))
    worksheet.write(1, 19, float(string.split()[2]))
    worksheet.write(1, 20, float(string.split()[3]))
    worksheet.write(1, 21, float(string.split()[4]))
    worksheet.write(1, 22, float(string.split()[5]))
    worksheet.write(1, 23, float(string.split()[6]))
    worksheet.write(1, 24, float(string.split()[7]))
    worksheet.write(1, 25, float(string.split()[8]))
    worksheet.write(1, 26, float(string.split()[9]))
    worksheet.write(1, 27, float(string.split()[10]))
    fpEA.close()

    fpNCM=open("NumberOfCoordinationAtoms.log","r")
    line=fpNCM.read()
    string=line.strip('\n').split(":")[1]
    worksheet.write(1, 28, int(string.split()[0]))   
    worksheet.write(1, 29, int(string.split()[1]))   
    worksheet.write(1, 30, int(string.split()[2]))   
    worksheet.write(1, 31, int(string.split()[3]))   
    worksheet.write(1, 32, int(string.split()[4]))   
    worksheet.write(1, 33, int(string.split()[5]))   
    worksheet.write(1, 34, int(string.split()[6]))   
    worksheet.write(1, 35, int(string.split()[7]))   
    worksheet.write(1, 36, int(string.split()[8]))   
    worksheet.write(1, 37, int(string.split()[9]))   
    fpNCM.close()

    #fpCharge=open("Charge.log","r")
    #line=fpCharge.read()
    worksheet.write(1, 38, '0')
    #fpCharge.close()

    fpLTrans=open("LTrans.log","r")
    line=fpLTrans.read()
    worksheet.write(1, 39, line.strip('\n').split(":")[1])
    fpLTrans.close()

    #fpLTrans=open("GroupNum.log","r")
    #line=fpLTrans.read()
    worksheet.write(1, 40, metalGroup)
    #fpLTrans.close()

    #fpNames=open("Names.txt","r")
    #line=fpNames.read()
    #worksheet.write(1, 37, line.strip('\n').split(":")[1])
    #fpNames.close()

    workbook.save('MLDataMHDist.xls')

if __name__ == '__main__':
    metal = sys.argv[1]
    metalGroup = sys.argv[2]
    GenExcelMHDist(metal, metalGroup)
